name: cnetmon build

on: [push]

env:
  IMAGE_NAME: cnetmon
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0
jobs:
  build-multi-arch:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          cache-dependency-path: src/go.sum

      - name: Build
        run: cd src && go build -ldflags="-w -s" -o ../out/cnetmon .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Build and push multi-arch images
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          echo "Building multi-arch images for $IMAGE_ID:$VERSION"
          
          docker buildx build --platform linux/amd64,linux/arm64 \
            --tag $IMAGE_ID:$VERSION \
            --push \
            .
